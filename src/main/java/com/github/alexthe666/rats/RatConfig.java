package com.github.alexthe666.rats;

import net.minecraftforge.common.config.Configuration;

public class RatConfig {
    public boolean spawnRats = true;
    public boolean spawnPiper = true;
    public int defaultRatRadius = 16;
    public int maxRatRadius = 32;
    public int ratSpawnRate = 80;
    public int ratSpawnDecrease = 2;
    public int piperSpawnDecrease = 1;
    public int piperSpawnRate = 6;
    public float piperHatDropRate = 0.09F;
    public float plagueEssenceDropRate = 0.05F;
    public float archeologistHatSpawnRate = 0.12F;
    public float ratlanteanAutomatonHealth = 600F;
    public float ratlanteanAutomatonAttack = 6F;
    public float neoRatlanteanHealth = 300F;
    public float neoRatlanteanAttack = 8F;
    public boolean ratsSpawnLikeMonsters = true;
    public boolean cheesemaking = true;
    public boolean plagueRats = true;
    public boolean ratFluteFunnySound = true;
    public int milkCauldronTime = 150;
    public boolean ratsDigBlocks = true;
    public boolean ratsBreakCrops = true;
    public boolean ratsStealItems = true;
    public boolean ratsContaminateFood = true;
    public boolean golemsTargetRats = true;
    public boolean villagePetShops = true;
    public boolean villageGarbageHeaps = true;
    public boolean villagePlagueDoctors = true;
    public boolean disablePlastic = false;
    public boolean ratsBreakBlockOnHarvest = true;
    public boolean plagueSpread = true;
    public boolean plagueHearts = true;
    public float ratStrengthThreshold = 4.0F;
    public int ratFluteDistance = 2;
    public int ratCageCramming = 4;
    public int ratUpdateDelay = 100;
    public int tokenDropRate = 10000;
    public String[] blacklistedRatBlocks = new String[0];
    public int[] blacklistedRatDimensions = new int[0];
    public boolean disableRatlantis = false;
    public int ratlantisDimensionId = -8;
    public int ratlantisPortalExitDimension = 0;
    public int maxDestroyedLeaves = 10000;
    public float blackDeathHealth = 400F;
    public float blackDeathAttack = 4F;
    public boolean ratsDespawn = true;
    public double ratDespawnFarDistance = 96F;
    public double ratDespawnCloseDistance = 20F;
    public int ratDespawnRandomChance = 400;
    public boolean ratFartNoises = true;
    public int ratRFTransferBasic = 100;
    public int ratRFTransferAdvanced = 500;
    public int ratRFTransferElite = 1000;
    public int ratRFTransferExtreme = 100000;
    public double ratVoodooDistance = 32;
    public boolean addLoot = true;
    public boolean customMainMenu = true;
    public float plagueTomeDropRate = 0.05F;

    //Rebirth of the Plague
    public float plagueStage1HealingDebuff = 0.5F;
    public int plagueStage3DamageFrequency = 60;
    public float plagueStage3Damage = 1F;
    public float plagueStage4Damage = 1F;
    public float plagueMaxHealthDebuff = 4F;
    public String plagueRestoreHealthItem = "rats:potato_kinishes";
    public int plagueEffectDuration = 900;
    public int plagueStageDuration = 600;
    public int plagueRespawnStage = -1;
    public boolean convertPlagueDoctorToBlackDeath = true;

    public boolean contaminatedFoodRandomDebuffs = true;

    public void init(Configuration config) {
        this.customMainMenu = config.getBoolean("Custom Main Menu", "all", true, "True if rats has a custom main menu");
        this.spawnRats = config.getBoolean("Spawn Rats", "all", true, "True if rats are to spawn naturally");
        this.ratSpawnDecrease = config.getInt("Rat Spawn Decrease", "all", 5, 0, Integer.MAX_VALUE, "A seperate random roll that only spawns rats if a one-out-of-X chance, x being this number. raise this number to make them more rare.");
        this.defaultRatRadius = config.getInt("Default Rat Radius", "all", 16, 1, Integer.MAX_VALUE, "Default radius for tamed rats conducting their searches for items, harvests, etc.");
        this.maxRatRadius = config.getInt("Max Rat Radius", "all", 32, 1, Integer.MAX_VALUE, "Largest possible radius for tamed rats conducting their searches for items, harvests, etc.");
        this.plagueRats = config.getBoolean("Plague Rats", "all", true, "True if plague rats are to spawn naturally");
        this.ratFluteFunnySound = config.getBoolean("Rat Flute Funny Sound", "all", true, "True if rat flutes can occasionally make a funny sound.");
        this.spawnPiper = config.getBoolean("Spawn Piper", "all", true, "True if Pied Pipers are to spawn naturally");
        this.piperSpawnDecrease = config.getInt("Piper Spawn Decrease", "all", 5, 0, Integer.MAX_VALUE, "A seperate random roll that only spawns pipers if a one-out-of-X chance, x being this number. raise this number to make them more rare.");
        this.ratSpawnRate = config.getInt("Rat Spawn Weight", "all", 80, 1, 300, "The weight of rats in vanilla's spawn rate");
        this.piperSpawnRate = config.getInt("Pied Piper Spawn Weight", "all", 6, 1, 300, "The weight of pied pipers in vanilla's spawn rate");
        this.piperHatDropRate = config.getFloat("Pied Piper Hat Drop Rate", "all", 0.09F, 0F, 1F, "percent chance for piper to drop hat on death");
        this.plagueEssenceDropRate = config.getFloat("Plague Essence Drop Rate", "all", 0.1F, 0F, 1F, "percent chance for plague rat to drop plague essence on death");
        this.plagueTomeDropRate = config.getFloat("Plague Tome Drop Rate", "all", 0.005F, 0F, 1F, "percent chance for plague rat to drop plague tome on death");
        this.archeologistHatSpawnRate = config.getFloat("Archeologist Hat Spawn Rate", "all", 0.12F, 0F, 1F, "percent chance for a husk or jungle skeleton to spawn with an archeologist hat");
        this.ratlanteanAutomatonHealth = config.getFloat("Ratlantean Automaton Max Health", "all", 600F, 0F, Float.MAX_VALUE, "Ratlantean Automaton Max Health");
        this.ratlanteanAutomatonAttack = config.getFloat("Ratlantean Automaton Attack Damage", "all", 6F, 0F, Float.MAX_VALUE, "Ratlantean Automaton Attack Damage");
        this.neoRatlanteanHealth = config.getFloat("Neo-Ratlantean Max Health", "all", 300F, 0F, Float.MAX_VALUE, "Neo-Ratlantean Max Health");
        this.neoRatlanteanAttack = config.getFloat("Neo-Ratlantean Automaton Attack Damage", "all", 8F, 0F, Float.MAX_VALUE, "Neo-Ratlantean Attack Damage");
        this.ratsBreakCrops = config.getBoolean("Rats Raid Crops", "all", true, "True if wild rats will destroy and eat crops");
        this.ratsStealItems = config.getBoolean("Rats Steal From Chests", "all", true, "True if wild rats will steal from chests");
        this.ratsContaminateFood = config.getBoolean("Rats Contaminate Food", "all", true, "True if wild rats contaminate food when they steal from chests");
        this.golemsTargetRats = config.getBoolean("Golems Target Rats", "all", true, "True if iron golems will attack wild rats");
        this.villagePetShops = config.getBoolean("Village Pet Shops", "all", true, "True if pet shops can spawn in villages");
        this.villageGarbageHeaps = config.getBoolean("Village Garbage Heap", "all", true, "True if garbage heaps can spawn in villages");
        this.villagePlagueDoctors = config.getBoolean("Village Plague Doctors", "all", true, "True if plague doctor huts can spawn in villages");
        this.ratsDigBlocks = config.getBoolean("Rats Dig Holes", "all", true, "True if rats can dig holes");
        this.ratsSpawnLikeMonsters = config.getBoolean("Rats Spawn Like Monsters", "all", true, "True if rats should spawn like monsters. False if they should only spawn once per world, like pigs and sheep.");
        this.ratsBreakBlockOnHarvest = config.getBoolean("Rats Break Crops on Harvest", "all", true, "True if tamed rats will destroy crops when they harvest them");
        this.ratFartNoises = config.getBoolean("Rat Fart Noises", "all", true, "True if rats should rarely make a funny noise when creating rats nuggets.");
        this.plagueSpread = config.getBoolean("Other Mobs can spread Plague", "all", true, "True if infected mobs with plague can spread it by interacting or attacking.");
        this.plagueHearts = config.getBoolean("Plague Heart Overlay", "all", true, "True if player UI has plague hearts render when the effect is active.");
        this.cheesemaking = config.getBoolean("Cheesemaking", "all", true, "True if cheese can be created in cauldrons");
        this.milkCauldronTime = config.getInt("Milk Curdling Time", "all", 150, 20, 1000000, "The time in ticks(20 per second) it takes for milk to turn into cheese in a cauldron");
        this.ratStrengthThreshold = config.getFloat("Rat Dig Strength", "all", 4F, 0F, 1000000F, "The max block hardness that rats are allowed to dig through. (Dirt = 0.5F, Cobblestone = 2.0F, Obsidian = 50.0F)");
        this.ratFluteDistance = config.getInt("Rat Flute Distance", "all", 2, 1, 100, "The how many chunks away can a rat here a rat flute");
        this.ratCageCramming = config.getInt("Rat Cage Max Occupancy", "all", 5, 1, 10000, "Rats will continue to breed in cages until there are this many rats in one cage block");
        this.ratUpdateDelay = config.getInt("Rat Upgrade Delay", "all", 100, 1, 10000, "Rats will conduct expensive CPU operations like looking for crops or chests, once every this number of ticks(with added standard deviation for servers)");
        this.blacklistedRatBlocks = config.getStringList("Blacklisted Rat Inventory Blocks", "all", new String[0], "Blacklist for blocks that rats are not allowed to steal from. Ex. \"minecraft:chest\" or \"rats:rat_crafting_table\"");
        this.blacklistedRatDimensions = config.get("all", "Blacklisted Rat Spawn Dimensions", new int[0], "Blacklist for dimensions that rats and pipers cannot spawn in").getIntList();
        this.tokenDropRate = config.getInt("Rat Token Drop Rate", "all", 10000, 1, Integer.MAX_VALUE, "1/This number chance for a rat to drop a Token");
        this.disableRatlantis = config.getBoolean("Disable Ratlantis", "all", false, "True if Ratlantis dimension is disabled - alternative methods of getting resources will be provided. WARNING: Leave the dimension and restart the game before changing this. You must be fun at parties.");
        this.disablePlastic = config.getBoolean("Disable Plastic", "all", false, "True if Plastic item is disabled - alternative methods of getting rat cage deco will be provided. WARNING: Leave the restard the game after changing this. You must be fun at parties.");
        this.ratlantisDimensionId = config.getInt("Ratlantis Dimension ID", "all", -8, Integer.MIN_VALUE, Integer.MAX_VALUE, "Ratlantis Dimension ID");
        this.ratlantisPortalExitDimension = config.getInt("Ratlantis Portal Exit Dimension ID", "all", 0, Integer.MIN_VALUE, Integer.MAX_VALUE, "What Dimension ID you are teleported to upon leaving Ratlantis");
        this.maxDestroyedLeaves = config.getInt("Rat Upgrade Lumberjack: Max Tree Blocks", "all", 10000, 0, Integer.MAX_VALUE, "How many blocks the Lumberjack Rat is able to destroy when felling a tree. Be careful when changing this to a large number.");
        this.blackDeathHealth = config.getFloat("Black Death Max Health", "all", 400F, 0F, Float.MAX_VALUE, "Black Death Max Health");
        this.blackDeathAttack = config.getFloat("Black Death Automaton Attack Damage", "all", 4F, 0F, Float.MAX_VALUE, "Black Death Attack Damage");
        this.ratsDespawn = config.getBoolean("Can Rats Despawn", "all", true, "True if wild, untamed rats can despawn.");
        this.ratDespawnFarDistance = config.getFloat("Rat Immediate Despawn Distance", "all", 96F, 0F, Float.MAX_VALUE, "Distance that untamed rats will immediately despawn. For Vanilla mobs, this is 128 blocks.");
        this.ratDespawnCloseDistance = config.getFloat("Rat Potential Despawn Distance", "all", 20F, 0F, Float.MAX_VALUE, "Distance that untamed rats could possibly despawn. For Vanilla mobs, this is 32 blocks.");
        this.ratDespawnRandomChance = config.getInt("Rat Potential Despawn Chance", "all", 400, 1, Integer.MAX_VALUE, "When a rat is farther than its potential despawn distance, a random roll is taken to see if it despawns. Lower this number will make rats more likely to despawn.");
        this.ratRFTransferBasic = config.getInt("Rat RF Transfer Rate Basic (kRF)", "all", 100, 1, Integer.MAX_VALUE, "How much kRF (1000 RF) a rat with a basic energy transfer upgrade can transport at a time.");
        this.ratRFTransferAdvanced = config.getInt("Rat RF Transfer Rate Advanced (kRF)", "all", 500, 1, Integer.MAX_VALUE, "How much kRF (1000 RF) a rat with an advanced energy transfer upgrade can transport at a time.");
        this.ratRFTransferElite = config.getInt("Rat RF Transfer Rate Elite (kRF)", "all", 1000, 1, Integer.MAX_VALUE, "How much kRF (1000 RF) a rat with an elite energy transfer upgrade can transport at a time.");
        this.ratRFTransferExtreme = config.getInt("Rat RF Transfer Rate Extreme (kRF)", "all", 100000, 1, Integer.MAX_VALUE, "How much kRF (1000 RF) a rat with an extreme energy transfer upgrade can transport at a time.");
        this.ratVoodooDistance = config.getFloat("Voodoo Doll Rat distance", "all", 32F, 0F, Float.MAX_VALUE, "How far away from players the Rat Upgrade: Voodoo Doll is effective.");
        this.addLoot = config.getBoolean("Add Loot", "all", true, "True if loot from rats can spawn in chests");

        //Rebirth of the plague
        this.plagueStage1HealingDebuff = config.getFloat("Plague: Stage 1 Healing Multiplier", "rebirth_of_the_plague", 0.5F, 0F, 1F, "A multiplier do decrease the original healing amount to the correct one of Plague, Stage 1");
        this.plagueStage3DamageFrequency = config.getInt("Plague: Stage 3 Damage Frequency (seconds)", "rebirth_of_the_plague", 60, 1, Integer.MAX_VALUE / 20, "Time in seconds to wait before the player is damaged by Plague, Stage 3");
        this.plagueStage3Damage = config.getFloat("Plague: Stage 3 Damage (half-hearts)", "rebirth_of_the_plague", 1F, 0, Float.MAX_VALUE, "Damage in half hearts units a Plague, Stage 3 effect should deal to an entity");
        this.plagueStage4Damage = config.getFloat("Plague: Stage 4 Damage (half-hearts)", "rebirth_of_the_plague", 1F, 0, Float.MAX_VALUE, "Damage in half hearts units a Plauge, Stage 4 effect should deal to an entity");
        this.plagueMaxHealthDebuff = config.getFloat("Plague: Max Health Debuff (half-hearts)", "rebirth_of_the_plague", 4F, 0, Float.MAX_VALUE, "Health points the player should lose after dying to Plague, Stage 4 effect");
        this.plagueRestoreHealthItem = config.getString("Max Health Restore Item", "rebirth_of_the_plague", "rats:potato_kinishes", "The registry name of the item that restores the player health to the original amount.");
        this.plagueEffectDuration = config.getInt("Plague Effect Duration (seconds)", "rebirth_of_the_plague", 900, 1, Integer.MAX_VALUE / 20, "Time in seconds the Plague effect should last for (should always be higher than the stage duration otherwise stage progression will not work)");
        this.plagueStageDuration = config.getInt("Plague Effect Stage Duration (seconds)", "rebirth_of_the_plague", 600, 1, Integer.MAX_VALUE / 20, "Time in seconds that should pass for a Plague effect to progress to the next stage");
        this.plagueRespawnStage = config.getInt("Plague Effect Respawn Stage", "rebirth_of_the_plague", -1, -1, 4, "The stage the player should respawn with after dying of plague during a non-final plague stage\n0 means plague effect won't be reassigned\n-1 (default) means dynamic, same as the previous plague stage");
        this.convertPlagueDoctorToBlackDeath = config.getBoolean("Lightning Converts Plague Doctor", "rebirth_of_the_plague", true, "Whether a Plague Doctor should convert to Black Death when struck by a lightning");
        this.contaminatedFoodRandomDebuffs = config.getBoolean("Contaminated Food Negative Debuffs", "rebirth_of_the_plague", true, "If set to true players eating contaminated food will get random negative effects [plague is one of the possible effects]");
    }
}
